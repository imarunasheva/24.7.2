# У нас есть готовая библиотека с реализацией основных методов,
# но остались ещё два нереализованных метода. Это и будет первым практическим заданием:
# посмотреть документацию к имеющимся API-методам на сайте.
# Найти методы, которые ещё не реализованы в библиотеке, и написать их реализацию в файле api.py.
#
# Как вы уже изучали ранее, видов тестирования много, соответственно,
# и тест-кейсов может быть очень много. Мы с вами написали пять простых позитивных тестов,
# проверяющих функционал с корректными данными, с ожидая, что всё пройдёт хорошо.
# Наша задача — убедиться, что система возвращает статус с кодом 200.
#
# Но как будет реагировать тестируемое приложение,
# если мы в параметрах передадим слишком большое значение или вообще его не передадим?
# Что будет, если мы укажем неверный ключ авторизации и так далее?
#
# Подумайте над вариантами тест-кейсов и напишите ещё 10
# различных тестов для данного REST API-интерфейса.
# Готовые тест-кейсы разместите на GitHub и пришлите ссылку в форму ниже.

import requests

# res = requests.get(url, headers=headers, params=params)

status = 'available'
res = requests.get(f"https://petstore.swagger.io/v2/pet/findByStatus?status={status}", headers={'accept': 'application/json'})
print(res.text)
print(res.status_code)
print(res.json())
print(type(res.json()))

# if 'application/json' in response.headers['Content-Type']:
#     response.json()
# else:
#     response.text
